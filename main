
package hw;
import java.util.Scanner;
public class Project1 {
 public static void main(String[] args) {
	 char[][] board=new char[6][7];
	 Scanner stdin=new Scanner(System.in);
	 for(int i=0;i<6;i++)
	 {	 for(int j=0;j<7;j++)
	 	{board[i][j]=' ';}
	 }
	 
	 int index;
	 int rowIndex;
	 System.out.print("Game Start!!!\n");
	 printBoard(board);
	 do {
		 //red player part
		 System.out.print("\nDrop a red disk at column(0-6):");
		 index=stdin.nextInt();
		 if(index>6||index<0) {System.out.print("out of range, please try again.");continue;}
		 rowIndex=0;
		 while(rowIndex<6) {if(board[rowIndex][index]!=' ') rowIndex++;else break;}
		 if(rowIndex==6) {System.out.print("This column "+index+" is full, please try another column.");continue;}
		 board[rowIndex][index]='R';
		 printBoard(board);
		 if(checkResult(board,rowIndex,index)) {System.out.println("\nThe red player won");break;}
		 // yellow player part
		 while(true) {
		 System.out.print("\nDrop a yellow disk at column(0-6):");
		 index=stdin.nextInt();
		 if(index>6||index<0) {System.out.print("out of range, please try again.");continue;}	 		 
		 rowIndex=0;
		 while(rowIndex<6) {if(board[rowIndex][index]!=' ') rowIndex++;else break;}	 
		 if(rowIndex==6) {System.out.print("This column "+index+" is full, please try another column.");continue;}else break;}
		 board[rowIndex][index]='Y';
		 printBoard(board);
		 if(checkResult(board,rowIndex,index)) {System.out.println("\nThe yellow player won");break;}
		 
		 if(checkFull(board)) {System.out.print("\nGame Over!! It's a tie.");break;} 
	 }while (true);
	 
	 stdin.close();
	 
	 
 } 
 public static void printBoard(char[][] b) {
	 for(int i=5;i>=0;i--)
	 {	 for(int j=0;j<7;j++)
	 {System.out.print("|"+b[i][j]);
	 
	 }System.out.print("|\n");
	 }
	 System.out.print("---------------\n 0 1 2 3 4 5 6");	 
 }
public static boolean checkResult(char[][] b,int r,int c) {
	boolean x=false;
	if(r+3<6&&b[r][c]==b[r+1][c]&&b[r][c]==b[r+2][c]&&b[r][c]==b[r+3][c]) return x=true;
	if(c+3<7&&b[r][c]==b[r][c+1]&&b[r][c]==b[r][c+2]&&b[r][c]==b[r][c+3]) return x=true;
	if(r-3>=0&&b[r][c]==b[r-1][c]&&b[r][c]==b[r-2][c]&&b[r][c]==b[r-3][c]) return x=true;
	if(c-3>=0&&b[r][c]==b[r][c-1]&&b[r][c]==b[r][c-2]&&b[r][c]==b[r][c-3]) return x=true;
	if(r+3<6&&c-3>=0&&b[r][c]==b[r+1][c-1]&&b[r][c]==b[r+2][c-2]&&b[r][c]==b[r+3][c-3]) return x=true;
	if(r+3<6&&c+3<7&&b[r][c]==b[r+1][c+1]&&b[r][c]==b[r+2][c+2]&&b[r][c]==b[r+3][c+3]) return x=true;
	if(r-3>=0&&c+3<7&&b[r][c]==b[r-1][c+1]&&b[r][c]==b[r-2][c+2]&&b[r][c]==b[r-3][c+3]) return x=true;
	if(r-3>=0&&c-3>=0&&b[r][c]==b[r-1][c-1]&&b[r][c]==b[r-2][c-2]&&b[r][c]==b[r-3][c-3]) return x=true;
	return x;
} 
public static boolean checkFull(char[][] b) {
	boolean x=true;
	for(int i=0;i<7;i++) {if(b[5][i]==' ') x=false;}
	return x;}
 
}
